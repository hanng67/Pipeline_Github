name: Actions 😎

on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches: [main]

env:
  UNITY_LICENSE: “<Your Unity License if you have, you can abort it if you don’t need to build it on production>”
jobs:
  prebuild:
    name: Prebuild
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install LFS
        run: git lfs install
  build:
    needs: ['prebuild']
    name: Build Workflow ✨
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: /Library
          key: Library-test-project-WebGL

      # Test
      # - name: Run tests
      #  uses: game-ci/unity-test-runner@v2
      #  with:
      #    projectPath: .

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        with:
          projectPath: .
          targetPlatform: WebGL
          versioning: Semantic

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

  #
  # End of readme workflow.
  #
  # Below is a test of most combinations, for testing integrity.
  #

  requestManualActivationFile:
    name: Request manual activation file 🔑
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v2

      # Request manual activation file
      - uses: game-ci/unity-request-activation-file@v2
        id: getManualLicenseFile

      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - uses: actions/upload-artifact@v2
        with:
          name: Manual Activation File
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}
  deploy:
    name: Deploy to Docker
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Build
          path: build
      - name: List Folders
        run: ls -al build/
      - name: Login Docker
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Docker image
        run: docker build . -t congchinh262/flappy-bird:latest
      - name: Push image to Docker Registry
        run: docker image push congchinh262/flappy-bird:latest
  cleanUp:
    name: Clean up
    runs-on: ubuntu-latest
    needs: ['build','deploy']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clean up
        run: git lfs uninstall
#  requestActivation:
#    name: Request activation ✔
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: game-ci/unity-activate@v2
#
#  activateAndThenReturnLicense:
#    name: returnLicense 🎈
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: game-ci/unity-activate@v2
#      - uses: game-ci/unity-return-license@v2
